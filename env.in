set(ENV_INCLUDED "Done")

# the library
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")
set(LIBRARY_OUTPUT_PATH lib)
set(Abcd_INCLUDE_DIRS
    ${ABCD_PROJECT_DIR}/include
    ${ABCD_PROJECT_DIR}/lib/sparselib/include
    ${ABCD_PROJECT_DIR}/lib/sparselib/mv/include
    ${ABCD_PROJECT_DIR}/python/numpy
    ${ABCD_PROJECT_DIR}/python/numpy/boost
    ${ABCD_PROJECT_DIR}/python/numpy/boost/numpy
)
set(Abcd_LIBRARY_DIRS
    ${ABCD_PROJECT_BINARY_DIR}/${CMAKE_BUILD_TYPE}
    ${ABCD_PROJECT_DIR}/lib
    ${ABCD_PROJECT_DIR}/lib/sparselib/lib/
)
# Compilation flags
SET( CMAKE_C_FLAGS  "${CMAKE_C_FLAGS} -m64 -z muldefs ${CMAKE_OPENMP_FLAG}")
SET( CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -m64 -z muldefs -std=c++11 ${CMAKE_OPENMP_FLAG}")
SET( CMAKE_Fortran_FLAGS  "${CMAKE_Fortran_FLAGS} -m64 -z muldefs ${CMAKE_OPENMP_FLAG}")

##Dependencies
# BOOST
set(Boost_LIBRARIES
    boost_mpi
    boost_serialization
)
IF (PYTHON)
    set(Boost_LIBRARIES
        boost_python
        ${Boost_LIBRARIES}
    )
ENDIF()
# Others
if(NOT PATOH MATCHES OFF)
    add_definitions(-DPATOH)
    set(LIBS ${LIBS} patoh)
endif()
if(MUMPS_ES MATCHES OFF)
    add_definitions(-DNO_MUMPS_ES)
endif()
if(WIP MATCHES ON)
    add_definitions(-DWIP)
endif()
# includes
include_directories(
    ${Python_INCLUDE_DIRS}
    ${Abcd_INCLUDE_DIRS}
    ${Boost_INCLUDE_DIRS}
    ${MPI_INC_DIR}
    ${BLAS_LAPACK_SCALAPACK_INC}
    ${INC_DIRS}
    ${PYTHON_INCLUDE_DIR}
    ${PYTHON_NUMPY_INCLUDE_DIR}
)
# libraries
link_directories(
    ${Abcd_LIBRARY_DIRS}
    ${Boost_LIBRARY_DIRS}
    ${BLAS_LAPACK_SCALAPACK_DIRS}
    ${MPI_LIB_DIR}
    ${LIB_DIRS}
)
set(LIBS
    ${Boost_LIBRARIES}
    dmumps
    mumps_common
    pord
    sparse
    spblas
    mv
    pthread
    ${BLAS_LAPACK_SCALAPACK_LIBS}
    ${MPI_LIBRARIES}
    ${LIBS}
)
