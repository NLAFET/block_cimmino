;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Sample configuration file              ;;
;;                                        ;;
;; See the documentation for more details ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;
;; MUMPS PART ;;
;;;;;;;;;;;;;;;;

; Solve the linear system with MUMPS before solving with ABCD
; and compare both results. Use only with square matrices!
; Note: the configuration used is generic and is in no way representative of MUMPS performance
; 0 > do not run mumps
; 1 > run mumps
test_mumps      0

; Stop abcd_run if mumps run time is smaller than the value `val` in seconds
; 0 > do not stop abcd_run
; val > stop mumps 
min_mumps       0


;;;;;;;;;;;;;;;
;; ABCD PART ;;
;;;;;;;;;;;;;;;

; verbosity: 0, 1, or 2
verbose_level   2

; write the scaled and permuted matrix to a file after preprocessing
;write_problem   "A_prep.mtx"

; scaling
; -1 > manual
;    (man_scaling set the number of iterations: #normInf;#norm1;#normInf;#norm2)
; 0 > no scaling
; 1 > scaling with iterations 5;20;10;0
; 2 > scaling with iterations 10;20;20;1
scaling         2
man_scaling         20:50:50:1

system
{
    ; only matrix-market format is supported
    matrix_file "../example/e05r0500.mtx"
    rhs_file    "../example/e05r0500_rhs.mtx"
    start_file  "../example/e05r0500_x0.mtx"

    ; the output
    sol_file    "solution"

    ; maximum number of iterations
    itmax       100

    ; stopping criteria on the backward error for block CG
    threshold   1e-12

    ; the block-size used by the conjugate gradient
    ; must be >= 1. If start_file provided, will turn to 1
    block_size  4
}

partitioning
{
    ; partitioning type
    ; 1 > manual
    ; 2 > automatic
    ; 3 > patoh
    ; 4 > reading from file
    part_type    3

    ; must specify filename if part_type==4
    partvector "../example/e05r0500.mtx_part4"

    ; number of partitions
    nbparts      4

    ; guess the number of partitions
    ; 0 > do not guess
    ; 1 > guess the number of partitions
    part_guess   0

    ;; If you set the partitioning type to 1 (manual)
    ;; you will have to give the number of rows per partition
    ;; in addition to the number of partitions as follows
    ;;
    ;;  nbrows
    ;;  {
    ;;      200        ; number of rows of the first partition
    ;;      220        ; number of rows of the second partition
    ;;      230        ; number of rows of the third partition
    ;;      200        
    ;;      200        
    ;;      and so on...
    ;;  }
}


augmentation
{
    ; augmentation type
    ; 0 > no augmentation (regular block cimmino)
    ; 1 > C_ij/-I augmentation
    ; 2 > A_ij/-A_ji augmentation
    aug_type     0

    ; the blocking factor when creating the auxiliary system
    aug_blocking 256
}
