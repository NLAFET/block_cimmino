<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="highlight_8pack_8js" kind="file">
    <compoundname>highlight.pack.js</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">var<sp/>hljs=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>k(v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.replace(/&amp;/gm,</highlight><highlight class="stringliteral">&quot;&amp;amp;&quot;</highlight><highlight class="normal">).replace(/&lt;/gm,</highlight><highlight class="stringliteral">&quot;&amp;lt;&quot;</highlight><highlight class="normal">).replace(/&gt;/gm,</highlight><highlight class="stringliteral">&quot;&amp;gt;&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>t(v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.nodeName.toLowerCase()}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>i(w,x){var<sp/>v=w&amp;&amp;w.exec(x);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v&amp;&amp;v.index==0}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>d(v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Array.prototype.map.call(v.childNodes,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(w){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(w.nodeType==3){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b.useBR?w.nodeValue.replace(/\n/g,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">):w.nodeValue}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t(w)==</highlight><highlight class="stringliteral">&quot;br&quot;</highlight><highlight class="normal">){</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d(w)}).join(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>r(w){var<sp/>v=(w.className+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+(w.parentNode?w.parentNode.className:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)).split(/\s+/);v=v.map(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(x){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.replace(/^language-/,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)});</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.filter(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(x){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>j(x)||x==</highlight><highlight class="stringliteral">&quot;no-highlight&quot;</highlight><highlight class="normal">})[0]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>o(x,y){var<sp/>v={};</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>w<sp/>in<sp/>x){v[w]=x[w]}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>w<sp/>in<sp/>y){v[w]=y[w]}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>u(x){var<sp/>v=[];(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>w(y,z){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>A=y.firstChild;A;A=A.nextSibling){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(A.nodeType==3){z+=A.nodeValue.length}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t(A)==</highlight><highlight class="stringliteral">&quot;br&quot;</highlight><highlight class="normal">){z+=1}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(A.nodeType==1){v.push({</highlight><highlight class="keyword">event</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">,offset:z,node:A});z=w(A,z);v.push({</highlight><highlight class="keyword">event</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;stop&quot;</highlight><highlight class="normal">,offset:z,node:A})}}}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z})(x,0);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>q(w,y,C){var<sp/>x=0;var<sp/>F=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;var<sp/>z=[];</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>B(){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!w.length||!y.length){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w.length?w:y}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(w[0].offset!=y[0].offset){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(w[0].offset&lt;y[0].offset)?w:y}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y[0].event==</highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">?w:y}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>A(H){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>G(I){</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+I.nodeName+</highlight><highlight class="stringliteral">&apos;=&quot;&apos;</highlight><highlight class="normal">+k(I.value)+</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">}F+=</highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">+t(H)+Array.prototype.map.call(H.attributes,G).join(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>E(G){F+=</highlight><highlight class="stringliteral">&quot;&lt;/&quot;</highlight><highlight class="normal">+t(G)+</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>v(G){(G.event==</highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">?A:E)(G.node)}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(w.length||y.length){var<sp/>D=B();F+=k(C.substr(x,D[0].offset-x));x=D[0].offset;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(D==w){z.reverse().forEach(E);</highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{v(D.splice(0,1)[0]);D=B()}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(D==w&amp;&amp;D.length&amp;&amp;D[0].offset==x);z.reverse().forEach(A)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(D[0].event==</highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">){z.push(D[0].node)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{z.pop()}v(D.splice(0,1)[0])}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F+k(C.substr(x))}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>m(y){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>v(z){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(z&amp;&amp;z.source)||z}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>w(A,z){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RegExp(v(A),</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">+(y.cI?</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+(z?</highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>x(D,C){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(D.compiled){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">}D.compiled=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;D.k=D.k||D.bK;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(D.k){var<sp/>z={};</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>E(G,F){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y.cI){F=F.toLowerCase()}F.split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">).forEach(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(H){var<sp/>I=H.split(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);z[I[0]]=[G,I[1]?Number(I[1]):1]})}if(typeof<sp/>D.k==</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">){E(</highlight><highlight class="stringliteral">&quot;keyword&quot;</highlight><highlight class="normal">,D.k)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{Object.keys(D.k).forEach(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(F){E(F,D.k[F])})}D.k=z}D.lR=w(D.l||/\b[A-Za-z0-9_]+\b/,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(C){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(D.bK){D.b=D.bK.split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">).join(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!D.b){D.b=/\B|\b/}D.bR=w(D.b);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!D.e&amp;&amp;!D.eW){D.e=/\B|\b/}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(D.e){D.eR=w(D.e)}D.tE=v(D.e)||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(D.eW&amp;&amp;C.tE){D.tE+=(D.e?</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+C.tE}}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(D.i){D.iR=w(D.i)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(D.r===undefined){D.r=1}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!D.c){D.c=[]}var<sp/>B=[];D.c.forEach(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(F){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(F.v){F.v.forEach(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(G){B.push(o(F,G))})}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{B.push(F==</highlight><highlight class="stringliteral">&quot;self&quot;</highlight><highlight class="normal">?D:F)}});D.c=B;D.c.forEach(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(F){x(F,D)});</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(D.starts){x(D.starts,C)}var<sp/>A=D.c.map(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(F){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F.bK?</highlight><highlight class="stringliteral">&quot;\\.?\\b(&quot;</highlight><highlight class="normal">+F.b+</highlight><highlight class="stringliteral">&quot;)\\b\\.?&quot;</highlight><highlight class="normal">:F.b}).concat([D.tE]).concat([D.i]).map(v).filter(Boolean);D.t=A.length?w(A.join(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">true</highlight><highlight class="normal">):{exec:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(F){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null}};D.continuation={}}x(y)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>c(S,L,J,R){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>v(U,V){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>T=0;T&lt;V.c.length;T++){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i(V.c[T].bR,U)){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>V.c[T]}}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>z(U,T){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i(U.eR,T)){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>U}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(U.eW){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z(U.parent,T)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>A(T,U){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!J&amp;&amp;i(U.iR,T)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>E(V,T){var<sp/>U=M.cI?T[0].toLowerCase():T[0];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>V.k.hasOwnProperty(U)&amp;&amp;V.k[U]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>w(Z,X,W,V){var<sp/>T=V?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:b.classPrefix,U=</highlight><highlight class="stringliteral">&apos;&lt;span<sp/>class=&quot;&apos;</highlight><highlight class="normal">+T,Y=W?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&lt;/span&gt;&quot;</highlight><highlight class="normal">;U+=Z+</highlight><highlight class="stringliteral">&apos;&quot;&gt;&apos;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>U+X+Y}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>N(){var<sp/>U=k(C);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!I.k){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>U}var<sp/>T=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;var<sp/>X=0;I.lR.lastIndex=0;var<sp/>V=I.lR.exec(U);</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(V){T+=U.substr(X,V.index-X);var<sp/>W=E(I,V);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(W){H+=W[1];T+=w(W[0],V[0])}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{T+=V[0]}X=I.lR.lastIndex;V=I.lR.exec(U)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T+U.substr(X)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>F(){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(I.sL&amp;&amp;!f[I.sL]){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k(C)}var<sp/>T=I.sL?c(I.sL,C,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,I.continuation.top):g(C);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(I.r&gt;0){H+=T.r}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(I.subLanguageMode==</highlight><highlight class="stringliteral">&quot;continuous&quot;</highlight><highlight class="normal">){I.continuation.top=T.top}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w(T.language,T.value,</highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>Q(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>I.sL!==undefined?F():N()}function<sp/>P(V,U){var<sp/>T=V.cN?w(V.cN,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">):</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(V.rB){D+=T;C=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(V.eB){D+=k(U)+T;C=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{D+=T;C=U}}I=Object.create(V,{parent:{value:I}})}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>G(T,X){C+=T;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(X===undefined){D+=Q();</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0}var<sp/>V=v(X,I);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(V){D+=Q();P(V,X);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>V.rB?0:X.length}var<sp/>W=z(I,X);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(W){var<sp/>U=I;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(U.rE||U.eE)){C+=X}D+=Q();</highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(I.cN){D+=</highlight><highlight class="stringliteral">&quot;&lt;/span&gt;&quot;</highlight><highlight class="normal">}H+=I.r;I=I.parent}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(I!=W.parent);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(U.eE){D+=k(X)}C=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(W.starts){P(W.starts,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>U.rE?0:X.length}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(A(X,I)){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Error(</highlight><highlight class="stringliteral">&apos;Illegal<sp/>lexeme<sp/>&quot;&apos;</highlight><highlight class="normal">+X+</highlight><highlight class="stringliteral">&apos;&quot;<sp/>for<sp/>mode<sp/>&quot;&apos;</highlight><highlight class="normal">+(I.cN||</highlight><highlight class="stringliteral">&quot;&lt;unnamed&gt;&quot;</highlight><highlight class="normal">)+</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)}C+=X;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>X.length||1}var<sp/>M=j(S);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!M){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Error(</highlight><highlight class="stringliteral">&apos;Unknown<sp/>language:<sp/>&quot;&apos;</highlight><highlight class="normal">+S+</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)}m(M);var<sp/>I=R||M;var<sp/>D=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>K=I;K!=M;K=K.parent){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(K.cN){D=w(K.cN,D,</highlight><highlight class="keyword">true</highlight><highlight class="normal">)}}var<sp/>C=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;var<sp/>H=0;</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{var<sp/>B,y,x=0;</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){I.t.lastIndex=x;B=I.t.exec(L);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!B){</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">}y=G(L.substr(x,B.index-x),B[0]);x=B.index+y}G(L.substr(x));</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>K=I;K.parent;K=K.parent){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(K.cN){D+=</highlight><highlight class="stringliteral">&quot;&lt;/span&gt;&quot;</highlight><highlight class="normal">}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{r:H,value:D,language:S,top:I}}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(O){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(O.message.indexOf(</highlight><highlight class="stringliteral">&quot;Illegal&quot;</highlight><highlight class="normal">)!=-1){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{r:0,value:k(L)}}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>O}}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>g(y,x){x=x||b.languages||Object.keys(f);var<sp/>v={r:0,value:k(y)};var<sp/>w=v;x.forEach(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(z){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!j(z)){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">}var<sp/>A=c(z,y,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);A.language=z;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(A.r&gt;w.r){w=A}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(A.r&gt;v.r){w=v;v=A}});</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(w.language){v.second_best=w}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>h(v){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b.tabReplace){v=v.replace(/^((&lt;[^&gt;]+&gt;|\t)+)/gm,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(w,z,y,x){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z.replace(/\t/g,b.tabReplace)})}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b.useBR){v=v.replace(/\n/g,</highlight><highlight class="stringliteral">&quot;&lt;br&gt;&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>p(z){var<sp/>y=d(z);var<sp/>A=r(z);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(A==</highlight><highlight class="stringliteral">&quot;no-highlight&quot;</highlight><highlight class="normal">){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">}var<sp/>v=A?c(A,y,</highlight><highlight class="keyword">true</highlight><highlight class="normal">):g(y);var<sp/>w=u(z);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(w.length){var<sp/>x=document.createElementNS(</highlight><highlight class="stringliteral">&quot;http://www.w3.org/1999/xhtml&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;pre&quot;</highlight><highlight class="normal">);x.innerHTML=v.value;v.value=q(w,u(x),y)}v.value=h(v.value);z.innerHTML=v.value;z.className+=</highlight><highlight class="stringliteral">&quot;<sp/>hljs<sp/>&quot;</highlight><highlight class="normal">+(!A&amp;&amp;v.language||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);z.result={language:v.language,re:v.r};</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v.second_best){z.second_best={language:v.second_best.language,re:v.second_best.r}}}var<sp/>b={classPrefix:</highlight><highlight class="stringliteral">&quot;hljs-&quot;</highlight><highlight class="normal">,tabReplace:null,useBR:</highlight><highlight class="keyword">false</highlight><highlight class="normal">,languages:undefined};</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>s(v){b=o(b,v)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>l(){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(l.called){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">}l.called=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;var<sp/>v=document.querySelectorAll(</highlight><highlight class="stringliteral">&quot;pre<sp/>code&quot;</highlight><highlight class="normal">);Array.prototype.forEach.call(v,p)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>a(){addEventListener(</highlight><highlight class="stringliteral">&quot;DOMContentLoaded&quot;</highlight><highlight class="normal">,l,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);addEventListener(</highlight><highlight class="stringliteral">&quot;load&quot;</highlight><highlight class="normal">,l,</highlight><highlight class="keyword">false</highlight><highlight class="normal">)}var<sp/>f={};var<sp/>n={};</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>e(v,x){var<sp/>w=f[v]=x(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(w.aliases){w.aliases.forEach(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(y){n[y]=v})}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>j(v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f[v]||f[n[v]]}this.highlight=c;this.highlightAuto=g;this.fixMarkup=h;this.highlightBlock=p;this.configure=s;this.initHighlighting=l;this.initHighlightingOnLoad=a;this.registerLanguage=e;this.getLanguage=j;this.inherit=o;this.IR=</highlight><highlight class="stringliteral">&quot;[a-zA-Z][a-zA-Z0-9_]*&quot;</highlight><highlight class="normal">;this.UIR=</highlight><highlight class="stringliteral">&quot;[a-zA-Z_][a-zA-Z0-9_]*&quot;</highlight><highlight class="normal">;this.NR=</highlight><highlight class="stringliteral">&quot;\\b\\d+(\\.\\d+)?&quot;</highlight><highlight class="normal">;this.CNR=</highlight><highlight class="stringliteral">&quot;(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)&quot;</highlight><highlight class="normal">;this.BNR=</highlight><highlight class="stringliteral">&quot;\\b(0b[01]+)&quot;</highlight><highlight class="normal">;this.RSR=</highlight><highlight class="stringliteral">&quot;!|!=|!==|%|%=|&amp;|&amp;&amp;|&amp;=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|&lt;&lt;|&lt;&lt;=|&lt;=|&lt;|===|==|=|&gt;&gt;&gt;=|&gt;&gt;=|&gt;=|&gt;&gt;&gt;|&gt;&gt;|&gt;|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~&quot;</highlight><highlight class="normal">;this.BE={b:</highlight><highlight class="stringliteral">&quot;\\\\[\\s\\S]&quot;</highlight><highlight class="normal">,r:0};this.ASM={cN:</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">,b:</highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">,e:</highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">,i:</highlight><highlight class="stringliteral">&quot;\\n&quot;</highlight><highlight class="normal">,c:[this.BE]};this.QSM={cN:</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">,b:</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">,e:</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">,i:</highlight><highlight class="stringliteral">&quot;\\n&quot;</highlight><highlight class="normal">,c:[this.BE]};this.CLCM={cN:</highlight><highlight class="stringliteral">&quot;comment&quot;</highlight><highlight class="normal">,b:</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal">,e:</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">};this.CBLCLM={cN:</highlight><highlight class="stringliteral">&quot;comment&quot;</highlight><highlight class="normal">,b:</highlight><highlight class="stringliteral">&quot;/\\*&quot;</highlight><highlight class="normal">,e:</highlight><highlight class="stringliteral">&quot;\\*/&quot;</highlight><highlight class="normal">};this.HCM={cN:</highlight><highlight class="stringliteral">&quot;comment&quot;</highlight><highlight class="normal">,b:</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,e:</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">};this.NM={cN:</highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">,b:this.NR,r:0};this.CNM={cN:</highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">,b:this.CNR,r:0};this.BNM={cN:</highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">,b:this.BNR,r:0};this.REGEXP_MODE={cN:</highlight><highlight class="stringliteral">&quot;regexp&quot;</highlight><highlight class="normal">,b:/\</highlight><highlight class="comment">//,e:/\/[gim]*/,i:/\n/,c:[this.BE,{b:/\[/,e:/\]/,r:0,c:[this.BE]}]};this.TM={cN:&quot;title&quot;,b:this.IR,r:0};this.UTM={cN:&quot;title&quot;,b:this.UIR,r:0}}();hljs.registerLanguage(&quot;bash&quot;,function(b){var<sp/>a={cN:&quot;variable&quot;,v:[{b:/\$[\w\d#@][\w\d_]*/},{b:/\$\{(.*?)\}/}]};var<sp/>d={cN:&quot;string&quot;,b:/&quot;/,e:/&quot;/,c:[b.BE,a,{cN:&quot;variable&quot;,b:/\$\(/,e:/\)/,c:[b.BE]}]};var<sp/>c={cN:&quot;string&quot;,b:/&apos;/,e:/&apos;/};return{l:/-?[a-z\.]+/,k:{keyword:&quot;if<sp/>then<sp/>else<sp/>elif<sp/>fi<sp/>for<sp/>break<sp/>continue<sp/>while<sp/>in<sp/>do<sp/>done<sp/>exit<sp/>return<sp/>set<sp/>declare<sp/>case<sp/>esac<sp/>export<sp/>exec&quot;,literal:&quot;true<sp/>false&quot;,built_in:&quot;printf<sp/>echo<sp/>read<sp/>cd<sp/>pwd<sp/>pushd<sp/>popd<sp/>dirs<sp/>let<sp/>eval<sp/>unset<sp/>typeset<sp/>readonly<sp/>getopts<sp/>source<sp/>shopt<sp/>caller<sp/>type<sp/>hash<sp/>bind<sp/>help<sp/>sudo&quot;,operator:&quot;-ne<sp/>-eq<sp/>-lt<sp/>-gt<sp/>-f<sp/>-d<sp/>-e<sp/>-s<sp/>-l<sp/>-a&quot;},c:[{cN:&quot;shebang&quot;,b:/^#![^\n]+sh\s*$/,r:10},{cN:&quot;function&quot;,b:/\w[\w\d_]*\s*\(\s*\)\s*\{/,rB:true,c:[b.inherit(b.TM,{b:/\w[\w\d_]*/})],r:0},b.HCM,b.NM,d,c,a]}});hljs.registerLanguage(&quot;diff&quot;,function(a){return{c:[{cN:&quot;chunk&quot;,r:10,v:[{b:/^\@\@<sp/>+\-\d+,\d+<sp/>+\+\d+,\d+<sp/>+\@\@$/},{b:/^\*\*\*<sp/>+\d+,\d+<sp/>+\*\*\*\*$/},{b:/^\-\-\-<sp/>+\d+,\d+<sp/>+\-\-\-\-$/}]},{cN:&quot;header&quot;,v:[{b:/Index:<sp/>/,e:/$/},{b:/=====/,e:/=====$/},{b:/^\-\-\-/,e:/$/},{b:/^\*{3}<sp/>/,e:/$/},{b:/^\+\+\+/,e:/$/},{b:/\*{5}/,e:/\*{5}$/}]},{cN:&quot;addition&quot;,b:&quot;^\\+&quot;,e:&quot;$&quot;},{cN:&quot;deletion&quot;,b:&quot;^\\-&quot;,e:&quot;$&quot;},{cN:&quot;change&quot;,b:&quot;^\\!&quot;,e:&quot;$&quot;}]}});hljs.registerLanguage(&quot;xml&quot;,function(a){var<sp/>c=&quot;[A-Za-z0-9\\._:-]+&quot;;var<sp/>d={b:/&lt;\?(php)?(?!\w)/,e:/\?&gt;/,sL:&quot;php&quot;,subLanguageMode:&quot;continuous&quot;};var<sp/>b={eW:true,i:/&lt;/,r:0,c:[d,{cN:&quot;attribute&quot;,b:c,r:0},{b:&quot;=&quot;,r:0,c:[{cN:&quot;value&quot;,v:[{b:/&quot;/,e:/&quot;/},{b:/&apos;/,e:/&apos;/},{b:/[^\s\/&gt;]+/}]}]}]};return{aliases:[&quot;html&quot;],cI:true,c:[{cN:&quot;doctype&quot;,b:&quot;&lt;!DOCTYPE&quot;,e:&quot;&gt;&quot;,r:10,c:[{b:&quot;\\[&quot;,e:&quot;\\]&quot;}]},{cN:&quot;comment&quot;,b:&quot;&lt;!--&quot;,e:&quot;--&gt;&quot;,r:10},{cN:&quot;cdata&quot;,b:&quot;&lt;\\!\\[CDATA\\[&quot;,e:&quot;\\]\\]&gt;&quot;,r:10},{cN:&quot;tag&quot;,b:&quot;&lt;style(?=\\s|&gt;|$)&quot;,e:&quot;&gt;&quot;,k:{title:&quot;style&quot;},c:[b],starts:{e:&quot;&lt;/style&gt;&quot;,rE:true,sL:&quot;css&quot;}},{cN:&quot;tag&quot;,b:&quot;&lt;script(?=\\s|&gt;|$)&quot;,e:&quot;&gt;&quot;,k:{title:&quot;script&quot;},c:[b],starts:{e:&quot;&lt;\/script&gt;&quot;,rE:true,sL:&quot;javascript&quot;}},{b:&quot;&lt;%&quot;,e:&quot;%&gt;&quot;,sL:&quot;vbscript&quot;},d,{cN:&quot;pi&quot;,b:/&lt;\?\w+/,e:/\?&gt;/,r:10},{cN:&quot;tag&quot;,b:&quot;&lt;/?&quot;,e:&quot;/?&gt;&quot;,c:[{cN:&quot;title&quot;,b:&quot;[^<sp/>/&gt;&lt;]+&quot;,r:0},b]}]}});hljs.registerLanguage(&quot;markdown&quot;,function(a){return{c:[{cN:&quot;header&quot;,v:[{b:&quot;^#{1,6}&quot;,e:&quot;$&quot;},{b:&quot;^.+?\\n[=-]{2,}$&quot;}]},{b:&quot;&lt;&quot;,e:&quot;&gt;&quot;,sL:&quot;xml&quot;,r:0},{cN:&quot;bullet&quot;,b:&quot;^([*+-]|(\\d+\\.))\\s+&quot;},{cN:&quot;strong&quot;,b:&quot;[*_]{2}.+?[*_]{2}&quot;},{cN:&quot;emphasis&quot;,v:[{b:&quot;\\*.+?\\*&quot;},{b:&quot;_.+?_&quot;,r:0}]},{cN:&quot;blockquote&quot;,b:&quot;^&gt;\\s+&quot;,e:&quot;$&quot;},{cN:&quot;code&quot;,v:[{b:&quot;`.+?`&quot;},{b:&quot;^(<sp/>{4}|\t)&quot;,e:&quot;$&quot;,r:0}]},{cN:&quot;horizontal_rule&quot;,b:&quot;^[-\\*]{3,}&quot;,e:&quot;$&quot;},{b:&quot;\\[.+?\\][\\(\\[].+?[\\)\\]]&quot;,rB:true,c:[{cN:&quot;link_label&quot;,b:&quot;\\[&quot;,e:&quot;\\]&quot;,eB:true,rE:true,r:0},{cN:&quot;link_url&quot;,b:&quot;\\]\\(&quot;,e:&quot;\\)&quot;,eB:true,eE:true},{cN:&quot;link_reference&quot;,b:&quot;\\]\\[&quot;,e:&quot;\\]&quot;,eB:true,eE:true,}],r:10},{b:&quot;^\\[.+\\]:&quot;,e:&quot;$&quot;,rB:true,c:[{cN:&quot;link_reference&quot;,b:&quot;\\[&quot;,e:&quot;\\]&quot;,eB:true,eE:true},{cN:&quot;link_url&quot;,b:&quot;\\s&quot;,e:&quot;$&quot;}]}]}});hljs.registerLanguage(&quot;python&quot;,function(a){var<sp/>f={cN:&quot;prompt&quot;,b:/^(&gt;&gt;&gt;|\.\.\.)<sp/>/};var<sp/>b={cN:&quot;string&quot;,c:[a.BE],v:[{b:/(u|b)?r?&apos;&apos;&apos;/,e:/&apos;&apos;&apos;/,c:[f],r:10},{b:/(u|b)?r?&quot;&quot;&quot;/,e:/&quot;&quot;&quot;/,c:[f],r:10},{b:/(u|r|ur)&apos;/,e:/&apos;/,r:10},{b:/(u|r|ur)&quot;/,e:/&quot;/,r:10},{b:/(b|br)&apos;/,e:/&apos;/,},{b:/(b|br)&quot;/,e:/&quot;/,},a.ASM,a.QSM]};var<sp/>d={cN:&quot;number&quot;,r:0,v:[{b:a.BNR+&quot;[lLjJ]?&quot;},{b:&quot;\\b(0o[0-7]+)[lLjJ]?&quot;},{b:a.CNR+&quot;[lLjJ]?&quot;}]};var<sp/>e={cN:&quot;params&quot;,b:/\(/,e:/\)/,c:[&quot;self&quot;,f,d,b]};var<sp/>c={e:/:/,i:/[${=;\n]/,c:[a.UTM,e]};return{k:{keyword:&quot;and<sp/>elif<sp/>is<sp/>global<sp/>as<sp/>in<sp/>if<sp/>from<sp/>raise<sp/>for<sp/>except<sp/>finally<sp/>print<sp/>import<sp/>pass<sp/>return<sp/>exec<sp/>else<sp/>break<sp/>not<sp/>with<sp/>class<sp/>assert<sp/>yield<sp/>try<sp/>while<sp/>continue<sp/>del<sp/>or<sp/>def<sp/>lambda<sp/>nonlocal|10<sp/>None<sp/>True<sp/>False&quot;,built_in:&quot;Ellipsis<sp/>NotImplemented&quot;},i:/(&lt;\/|-&gt;|\?)/,c:[f,d,b,a.HCM,a.inherit(c,{cN:&quot;function&quot;,bK:&quot;def&quot;,r:10}),a.inherit(c,{cN:&quot;class&quot;,bK:&quot;class&quot;}),{cN:&quot;decorator&quot;,b:/@/,e:/$/},{b:/\b(print|exec)\(/}]}});hljs.registerLanguage(&quot;cmake&quot;,function(a){return{cI:true,k:{keyword:&quot;add_custom_command<sp/>add_custom_target<sp/>add_definitions<sp/>add_dependencies<sp/>add_executable<sp/>add_library<sp/>add_subdirectory<sp/>add_test<sp/>aux_source_directory<sp/>break<sp/>build_command<sp/>cmake_minimum_required<sp/>cmake_policy<sp/>configure_file<sp/>create_test_sourcelist<sp/>define_property<sp/>else<sp/>elseif<sp/>enable_language<sp/>enable_testing<sp/>endforeach<sp/>endfunction<sp/>endif<sp/>endmacro<sp/>endwhile<sp/>execute_process<sp/>export<sp/>find_file<sp/>find_library<sp/>find_package<sp/>find_path<sp/>find_program<sp/>fltk_wrap_ui<sp/>foreach<sp/>function<sp/>get_cmake_property<sp/>get_directory_property<sp/>get_filename_component<sp/>get_property<sp/>get_source_file_property<sp/>get_target_property<sp/>get_test_property<sp/>if<sp/>include<sp/>include_directories<sp/>include_external_msproject<sp/>include_regular_expression<sp/>install<sp/>link_directories<sp/>load_cache<sp/>load_command<sp/>macro<sp/>mark_as_advanced<sp/>message<sp/>option<sp/>output_required_files<sp/>project<sp/>qt_wrap_cpp<sp/>qt_wrap_ui<sp/>remove_definitions<sp/>return<sp/>separate_arguments<sp/>set<sp/>set_directory_properties<sp/>set_property<sp/>set_source_files_properties<sp/>set_target_properties<sp/>set_tests_properties<sp/>site_name<sp/>source_group<sp/>string<sp/>target_link_libraries<sp/>try_compile<sp/>try_run<sp/>unset<sp/>variable_watch<sp/>while<sp/>build_name<sp/>exec_program<sp/>export_library_dependencies<sp/>install_files<sp/>install_programs<sp/>install_targets<sp/>link_libraries<sp/>make_directory<sp/>remove<sp/>subdir_depends<sp/>subdirs<sp/>use_mangled_mesa<sp/>utility_source<sp/>variable_requires<sp/>write_file<sp/>qt5_use_modules<sp/>qt5_use_package<sp/>qt5_wrap_cpp<sp/>on<sp/>off<sp/>true<sp/>false<sp/>and<sp/>or&quot;,operator:&quot;equal<sp/>less<sp/>greater<sp/>strless<sp/>strgreater<sp/>strequal<sp/>matches&quot;},c:[{cN:&quot;envvar&quot;,b:&quot;\\${&quot;,e:&quot;}&quot;},a.HCM,a.QSM,a.NM]}});hljs.registerLanguage(&quot;cpp&quot;,function(a){var<sp/>b={keyword:&quot;false<sp/>int<sp/>float<sp/>while<sp/>private<sp/>char<sp/>catch<sp/>export<sp/>virtual<sp/>operator<sp/>sizeof<sp/>dynamic_cast|10<sp/>typedef<sp/>const_cast|10<sp/>const<sp/>struct<sp/>for<sp/>static_cast|10<sp/>union<sp/>namespace<sp/>unsigned<sp/>long<sp/>throw<sp/>volatile<sp/>static<sp/>protected<sp/>bool<sp/>template<sp/>mutable<sp/>if<sp/>public<sp/>friend<sp/>do<sp/>return<sp/>goto<sp/>auto<sp/>void<sp/>enum<sp/>else<sp/>break<sp/>new<sp/>extern<sp/>using<sp/>true<sp/>class<sp/>asm<sp/>case<sp/>typeid<sp/>short<sp/>reinterpret_cast|10<sp/>default<sp/>double<sp/>register<sp/>explicit<sp/>signed<sp/>typename<sp/>try<sp/>this<sp/>switch<sp/>continue<sp/>wchar_t<sp/>inline<sp/>delete<sp/>alignof<sp/>char16_t<sp/>char32_t<sp/>constexpr<sp/>decltype<sp/>noexcept<sp/>nullptr<sp/>static_assert<sp/>thread_local<sp/>restrict<sp/>_Bool<sp/>complex<sp/>_Complex<sp/>_Imaginary&quot;,built_in:&quot;std<sp/>string<sp/>cin<sp/>cout<sp/>cerr<sp/>clog<sp/>stringstream<sp/>istringstream<sp/>ostringstream<sp/>auto_ptr<sp/>deque<sp/>list<sp/>queue<sp/>stack<sp/>vector<sp/>map<sp/>set<sp/>bitset<sp/>multiset<sp/>multimap<sp/>unordered_set<sp/>unordered_map<sp/>unordered_multiset<sp/>unordered_multimap<sp/>array<sp/>shared_ptr<sp/>abort<sp/>abs<sp/>acos<sp/>asin<sp/>atan2<sp/>atan<sp/>calloc<sp/>ceil<sp/>cosh<sp/>cos<sp/>exit<sp/>exp<sp/>fabs<sp/>floor<sp/>fmod<sp/>fprintf<sp/>fputs<sp/>free<sp/>frexp<sp/>fscanf<sp/>isalnum<sp/>isalpha<sp/>iscntrl<sp/>isdigit<sp/>isgraph<sp/>islower<sp/>isprint<sp/>ispunct<sp/>isspace<sp/>isupper<sp/>isxdigit<sp/>tolower<sp/>toupper<sp/>labs<sp/>ldexp<sp/>log10<sp/>log<sp/>malloc<sp/>memchr<sp/>memcmp<sp/>memcpy<sp/>memset<sp/>modf<sp/>pow<sp/>printf<sp/>putchar<sp/>puts<sp/>scanf<sp/>sinh<sp/>sin<sp/>snprintf<sp/>sprintf<sp/>sqrt<sp/>sscanf<sp/>strcat<sp/>strchr<sp/>strcmp<sp/>strcpy<sp/>strcspn<sp/>strlen<sp/>strncat<sp/>strncmp<sp/>strncpy<sp/>strpbrk<sp/>strrchr<sp/>strspn<sp/>strstr<sp/>tanh<sp/>tan<sp/>vfprintf<sp/>vprintf<sp/>vsprintf&quot;};return{aliases:[&quot;c&quot;],k:b,i:&quot;&lt;/&quot;,c:[a.CLCM,a.CBLCLM,a.QSM,{cN:&quot;string&quot;,b:&quot;&apos;\\\\?.&quot;,e:&quot;&apos;&quot;,i:&quot;.&quot;},{cN:&quot;number&quot;,b:&quot;\\b(\\d+(\\.\\d*)?|\\.\\d+)(u|U|l|L|ul|UL|f|F)&quot;},a.CNM,{cN:&quot;preprocessor&quot;,b:&quot;#&quot;,e:&quot;$&quot;,c:[{b:&quot;include\\s*&lt;&quot;,e:&quot;&gt;&quot;,i:&quot;\\n&quot;},a.CLCM]},{cN:&quot;stl_container&quot;,b:&quot;\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*&lt;&quot;,e:&quot;&gt;&quot;,k:b,r:10,c:[&quot;self&quot;]}]}});hljs.registerLanguage(&quot;makefile&quot;,function(a){var<sp/>b={cN:&quot;variable&quot;,b:/\$\(/,e:/\)/,c:[a.BE]};return{c:[a.HCM,{b:/^\w+\s*\W*=/,rB:true,r:0,starts:{cN:&quot;constant&quot;,e:/\s*\W*=/,eE:true,starts:{e:/$/,r:0,c:[b],}}},{cN:&quot;title&quot;,b:/^[\w]+:\s*$/},{cN:&quot;phony&quot;,b:/^\.PHONY:/,e:/$/,k:&quot;.PHONY&quot;,l:/[\.\w]+/},{b:/^\t+/,e:/$/,c:[a.QSM,b]}]}});</highlight></codeline>
    </programlisting>
    <location file="/home/mzenadi/projects/abcd/doc/old_doxygen/highlight.pack.js"/>
  </compounddef>
</doxygen>
