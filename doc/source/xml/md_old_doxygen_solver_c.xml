<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="md_old_doxygen_solver_c" kind="page">
    <compoundname>md_old_doxygen_solver_c</compoundname>
    <title>Using the solver in C</title>
    <detaileddescription>
<para>The solver is in the form of a structure named <computeroutput>struct abcd_solver</computeroutput> and the user has to create one for each MPI-process to be involved. In the following, we refer to a member of the structure by <computeroutput>solver-&gt;member</computeroutput>, where <computeroutput>solver</computeroutput> is a pointer to a <computeroutput>struct abcd_solver</computeroutput> structure. Arrays will have <computeroutput>[]</computeroutput> appended to them, if we specify a size then the array is pre-allocated at construction, otherwise it is either allocated by the user (such as the linear system entries) or by the solver once it&apos;s generated (such as the solution vector). The user can refer to <ref refid="md_old_doxygen_solver_c_1section_controls" kindref="member">The Controls</ref> for more details.</para><sect1 id="md_old_doxygen_solver_c_1section_instance">
<title>Instantiating and calling the solver</title>
<para>To use the solver, the user has to create a pointer to a <computeroutput>struct abcd_solver</computeroutput> structure. To do that, the user has to use the function <computeroutput>new_solver()</computeroutput>:</para><para><programlisting><codeline><highlight class="normal">structure<sp/>abcd_solver<sp/>*solver<sp/>=<sp/>new_solver();<sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>new<sp/>solver</highlight></codeline>
</programlisting></para><para>To run a job, the user has to call the solver with a job identifier, its value can be: * <bold>-1</bold>, initializes the internal matrix used by the solver. Prior to this call, the user must provide:<itemizedlist>
<listitem><para>The information about the matrix <computeroutput>solver-&gt;m</computeroutput>, <computeroutput>solver-&gt;n</computeroutput>, <computeroutput>solver-&gt;nz</computeroutput>, <computeroutput>solver-&gt;sym</computeroutput>, <computeroutput>solver-&gt;irn[]</computeroutput>, <computeroutput>solver-&gt;jcn[]</computeroutput>, <computeroutput>solver-&gt;val[]</computeroutput> have to be initialized before the call. See [Input matrix and right-hand side] for more detail.</para></listitem><listitem><para>After the call, the arrays <computeroutput>solver-&gt;irn[]</computeroutput>, <computeroutput>solver-&gt;jcn[]</computeroutput>, <computeroutput>solver-&gt;val[]</computeroutput> are no longer used by the solver. * <bold>1</bold>, performs the preprocessing. During this call, the solver scales the matrix, partition it, and if required by the user performs the augmentation of the matrix. Prior to this call, the user must provide: * The number of partitions to create (see <computeroutput>solver-&gt;icntl[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea9a63049a2fc1a2c72a68db48bb67ee24" kindref="member">Controls::nbparts</ref>]</computeroutput>) or ask the solver to guess the appropriate number of partitions (see <computeroutput>solver-&gt;icntl[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea2bfbb64d38dc2104fd14e46ce269c5f3" kindref="member">Controls::part_guess</ref>]</computeroutput>)</para></listitem><listitem><para>The type of scaling to perform (see <computeroutput>solver-&gt;icntl[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6eaccea5769b3f8da6ef81b4dc19e60f5a7" kindref="member">Controls::scaling</ref>]</computeroutput>)</para></listitem><listitem><para>The type of augmentation to perform (see <computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea306cb5cda1f0c844d33652130450fe4d" kindref="member">Controls::aug_type</ref>]</computeroutput>) * <bold>2</bold>, creates the augmented systems, analyses them, creates the mapping between the different mpi-processes and factorizes the augmented systems. * <bold>3</bold>, performs the solution step, the right-hand sides and their number are required prior to this call.</para></listitem><listitem><para>The right-hand sides have to be given through the array <computeroutput><ref refid="classabcd_1a6d0201d9f397728a0cb9f0504570e958" kindref="member">abcd::rhs</ref>[]</computeroutput> and their number in <computeroutput><ref refid="classabcd_1a461f8ba011adbe3ad98d5db2564fe4f3" kindref="member">abcd::nrhs</ref></computeroutput>.</para></listitem><listitem><para>The block-size to be used during the bloc-CG acceleration. Its value is used only during the regular block Cimmino solve, and by default its value is 1.</para></listitem><listitem><para>The solution is centralized (on the master) in the array <computeroutput><ref refid="classabcd_1ab5028be6534dc00db080cbba9ee23bd1" kindref="member">abcd::sol</ref>[]</computeroutput>. * <bold>5</bold>, regroups the call to the phases 2 and 3. * <bold>6</bold>, regroups the call to the phases 1, 2 and 3.</para></listitem></itemizedlist>
</para></sect1>
<sect1 id="md_old_doxygen_solver_c_1section_linearsystem">
<title>Input matrix and right-hand side</title>
<para>The current version of the ABCD Solver accepts only real, centralized, linear systems. The definition of the linear system uses 7 members:</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="classabcd_1a91ae5db6180d752acf83de9d07dc0d58" kindref="member">abcd::m</ref></computeroutput> (type: <computeroutput>int</computeroutput>), the number of rows.</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a430f5548e5969cc1f703563b92733b09" kindref="member">abcd::n</ref></computeroutput> (type: <computeroutput>int</computeroutput>), the number of columns.</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a0e652023493e13d320dd80a6b58c92ef" kindref="member">abcd::nz</ref></computeroutput> (type: <computeroutput>int</computeroutput>), the number of entries.</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a21d084898cb002a8814a7be3cf849da8" kindref="member">abcd::sym</ref></computeroutput> (type: <computeroutput>bool</computeroutput>), the symmetry of the matrix. If the matrix is symmetric, the matrix must be given in a lower-triangular form.</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a8f6403dd5d221f50c4484221b1ffae4a" kindref="member">abcd::irn</ref></computeroutput> (type: <computeroutput>int *</computeroutput>), the row indices.</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a56ab8a26759da48beacb9914edc97c39" kindref="member">abcd::jcn</ref></computeroutput> (type: <computeroutput>int *</computeroutput>), the column indices.</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a47f742608fbdf5f394a68097500dc7dd" kindref="member">abcd::val</ref></computeroutput> (type: <computeroutput>double *</computeroutput>), the matrix entries.</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a6d0201d9f397728a0cb9f0504570e958" kindref="member">abcd::rhs</ref></computeroutput> (type: <computeroutput>double *</computeroutput>), the right-hand sides.</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a461f8ba011adbe3ad98d5db2564fe4f3" kindref="member">abcd::nrhs</ref></computeroutput> (type: <computeroutput>int</computeroutput>), the number of right-hand sides (default value is 1)</para></listitem></itemizedlist>
</para><para>If either of the row and column indices start with <bold>0</bold> the arrays are supposed to be zero based (<computeroutput>C</computeroutput> arrays indexation), otherwise, if they start with <bold>1</bold> the arrays are supposed to be one based (<computeroutput>Fortran</computeroutput> arrays indexation). If however, none starts with <bold>0</bold> or <bold>1</bold> then there is either an empty row or an empty column and the solver raises an exception.</para><para><programlisting><codeline><highlight class="comment">//<sp/>Create<sp/>an<sp/>object<sp/>for<sp/>each<sp/>mpi-process</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classabcd" kindref="compound">abcd</ref><sp/>obj;</highlight></codeline>
<codeline><highlight class="normal">obj.<ref refid="classabcd_1a430f5548e5969cc1f703563b92733b09" kindref="member">n</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline><highlight class="normal">obj.<ref refid="classabcd_1a91ae5db6180d752acf83de9d07dc0d58" kindref="member">m</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline><highlight class="normal">obj.<ref refid="classabcd_1a0e652023493e13d320dd80a6b58c92ef" kindref="member">nz</ref><sp/>=<sp/>15;</highlight></codeline>
<codeline><highlight class="normal">obj.<ref refid="classabcd_1a21d084898cb002a8814a7be3cf849da8" kindref="member">sym</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(world.rank()<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>only<sp/>the<sp/>master<sp/>is<sp/>required<sp/>to<sp/>provide<sp/>the<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a8f6403dd5d221f50c4484221b1ffae4a" kindref="member">irn</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[obj.<ref refid="classabcd_1a0e652023493e13d320dd80a6b58c92ef" kindref="member">nz</ref>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>the<sp/>data<sp/>in<sp/>the<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a8f6403dd5d221f50c4484221b1ffae4a" kindref="member">irn</ref>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//..</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para></sect1>
<sect1 id="md_old_doxygen_solver_c_1section_controls">
<title>The Controls</title>
<para>Define the general behavior of the solver. They are split into two arrays, <computeroutput>icntl</computeroutput> and <computeroutput>dcntl</computeroutput>. <computeroutput>icntl</computeroutput> is an <emphasis>integer</emphasis> array and defines the options that control the specific parts of the solver, such as the scaling, the type of algorithm to run and so on. <computeroutput>dcntl</computeroutput> is a <emphasis>double precision</emphasis> array and defines some of the options required by the algorithms we use such as the imbalance between the partition sizes and the stopping criteria of the solver.</para><para>To access each of the control options we can either use the indices <computeroutput>0, 1, ..</computeroutput> or, preferably, use the <emphasis>enums</emphasis> defined in the header <computeroutput>defaults.h</computeroutput>. To access them, the user can use the namespace <computeroutput><ref refid="namespace_controls" kindref="compound">Controls</ref></computeroutput>, eg. <computeroutput><ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6eaccea5769b3f8da6ef81b4dc19e60f5a7" kindref="member">Controls::scaling</ref></computeroutput> has a value of <computeroutput>5</computeroutput> and is used with <computeroutput>icntl</computeroutput> to handle the scaling of the linear system.</para><sect2 id="md_old_doxygen_solver_c_1subsection_integer_controls">
<title>The integer control array</title>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea9a63049a2fc1a2c72a68db48bb67ee24" kindref="member">Controls::nbparts</ref>]</computeroutput> or <computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[1]</computeroutput> defines the number of partitions in our linear system, can be from <computeroutput>1</computeroutput> to <computeroutput>m</computeroutput> (the number of rows in the matrix) <programlisting><codeline><highlight class="comment">//<sp/>we<sp/>have<sp/>8<sp/>partitions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">obj.<ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea9a63049a2fc1a2c72a68db48bb67ee24" kindref="member">Controls::nbparts</ref>]<sp/>=<sp/>8;</highlight></codeline>
</programlisting></para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea8f0f8de2338c75908af3fed253d20082" kindref="member">Controls::part_type</ref>]</computeroutput> or <computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[2]</computeroutput> defines the partitioning type. It can have the values:</para><para>+ <computeroutput>1</computeroutput>, manual partitioning, the <emphasis>nbparts</emphasis> partitions can be provided into the STL vector <computeroutput>obj.nbrows[]</computeroutput>. Example: <programlisting><codeline><highlight class="comment">//<sp/>use<sp/>manual<sp/>partitioning</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">obj.<ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea8f0f8de2338c75908af3fed253d20082" kindref="member">Controls::part_type</ref>]<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>say<sp/>that<sp/>we<sp/>want<sp/>20<sp/>rows<sp/>per<sp/>partition</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">obj.nrows.assign(obj.<ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea9a63049a2fc1a2c72a68db48bb67ee24" kindref="member">Controls::nbparts</ref>],<sp/>20);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">obj.nrows.resize(obj.<ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea9a63049a2fc1a2c72a68db48bb67ee24" kindref="member">Controls::nbparts</ref>]);</highlight></codeline>
<codeline><highlight class="normal">obj.nrows[0]<sp/>=<sp/>20;</highlight></codeline>
<codeline><highlight class="normal">obj.nrows[1]<sp/>=<sp/>20;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//...</highlight></codeline>
</programlisting> + <computeroutput>2</computeroutput> (<emphasis>default</emphasis>), automatic uniform partitioning, creates <emphasis>nbparts</emphasis> partitions of similar size. <programlisting><codeline><highlight class="comment">//<sp/>use<sp/>patoh<sp/>partitioning</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">obj.<ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea8f0f8de2338c75908af3fed253d20082" kindref="member">Controls::part_type</ref>]<sp/>=<sp/>2;</highlight></codeline>
</programlisting> + <computeroutput>3</computeroutput>, automatic hypergraph partitioning, creates <emphasis>nbparts</emphasis> partitions using the hypergraph partitioner <computeroutput>PaToH</computeroutput>. The imbalance between the partitions is handled using <computeroutput>obj.dcntl[<ref refid="namespace_controls_1a95ac7709aefbd2460905cedd1e57b9d1abd79f61fc266a04fcf7f0cfd452304a7" kindref="member">Controls::part_imbalance</ref>]</computeroutput>. Example: <programlisting><codeline><highlight class="comment">//<sp/>use<sp/>patoh<sp/>partitioning</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">obj.<ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea8f0f8de2338c75908af3fed253d20082" kindref="member">Controls::part_type</ref>]<sp/>=<sp/>3;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>say<sp/>that<sp/>we<sp/>want<sp/>an<sp/>imbalance<sp/>of<sp/>0.3<sp/>between<sp/>the<sp/>partitions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">obj.dcntl[<ref refid="namespace_controls_1a95ac7709aefbd2460905cedd1e57b9d1abd79f61fc266a04fcf7f0cfd452304a7" kindref="member">Controls::part_imbalance</ref>]<sp/>=<sp/>0.3;</highlight></codeline>
</programlisting></para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea2bfbb64d38dc2104fd14e46ce269c5f3" kindref="member">Controls::part_guess</ref>]</computeroutput> or <computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[4]</computeroutput> asks the solver to guess the appropriate number of partitions and overrides the defined <emphasis>nbparts</emphasis>.</para><para>+ <computeroutput>0</computeroutput> <bold>default</bold>, no guess + <computeroutput>1</computeroutput>, guess</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6eaccea5769b3f8da6ef81b4dc19e60f5a7" kindref="member">Controls::scaling</ref>]</computeroutput> or <computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[5]</computeroutput> defines the type of scaling to be used.</para><para>+ <computeroutput>0</computeroutput>, no scaling + <computeroutput>1</computeroutput>, infinity norm <computeroutput>MC77</computeroutput> based scaling + <computeroutput>2</computeroutput> <bold>default</bold>, combination of one norm and two norm <computeroutput>MC77</computeroutput> based scaling</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea6cd993d493cb532bed17907e8337d9ca" kindref="member">Controls::itmax</ref>]</computeroutput> or <computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[6]</computeroutput> defines the maximum number of iterations in block-CG acceleration, default is <computeroutput>1000</computeroutput></para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6eafc8270cb8a6807e57f6b9c4c8748784a" kindref="member">Controls::block_size</ref>]</computeroutput> or <computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[7]</computeroutput> defines the block-size to be used by the block-CG acceleration, default is <computeroutput>1</computeroutput> for classical CG acceleration</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea7908c08ee866af16afb44ceafc34c654" kindref="member">Controls::verbose_level</ref>]</computeroutput> or <computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[8]</computeroutput> defines how verbose the solver has to be.</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea306cb5cda1f0c844d33652130450fe4d" kindref="member">Controls::aug_type</ref>]</computeroutput> or <computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[10]</computeroutput> defines the augmentation type.</para><para>+ <computeroutput>0</computeroutput> <bold>default</bold>, no augmentation. This makes the solver run in <bold>regular block Cimmino</bold> mode. + <computeroutput>1</computeroutput>, makes the solver run in <bold>Augmented Block Cimmino</bold> mode with an augmentation of the matrix using the <formula id="44">$C_{ij}/-I$</formula> technique. For numerical stability, this augmentation technique has to be used with a scaling. + <computeroutput>2</computeroutput>, makes the solver run in <bold>Augmented Block Cimmino</bold> mode with an augmentation of the matrix using the <formula id="45">$A_{ij}/-A_{ji}$</formula> technique. This is the prefered augmentation technique.</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6eab6733d8cc24c05926f0059fb637f153b" kindref="member">Controls::aug_blocking</ref>]</computeroutput> or <computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[11]</computeroutput> defines the blocking factor when building the auxiliary matrix $S$, default is <computeroutput>128</computeroutput>.</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6eadd0c78ddff9417b400d95b2cbdfd679e" kindref="member">Controls::aug_analysis</ref>]</computeroutput> or <computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[12]</computeroutput>, when set to a value different than <computeroutput>0</computeroutput>, analyses the number of columns in the augmentation.</para></listitem><listitem><para><computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[13]</computeroutput> to <computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[16]</computeroutput> are for development and testing purposes only.</para></listitem></itemizedlist>
</para></sect2>
<sect2 id="md_old_doxygen_solver_c_1subsection_double_controls">
<title>The double precision control array</title>
<para><itemizedlist>
<listitem><para><computeroutput>abcd::dcntl[<ref refid="namespace_controls_1a95ac7709aefbd2460905cedd1e57b9d1abd79f61fc266a04fcf7f0cfd452304a7" kindref="member">Controls::part_imbalance</ref>]</computeroutput> or <computeroutput>obj.dcntl[1]</computeroutput> defines the imbalance between the partitions when using <computeroutput>PaToH</computeroutput> (<computeroutput><ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">abcd::icntl</ref>[<ref refid="namespace_controls_1a95ac7709aefbd2460905cedd1e57b9d1abd79f61fc266a04fcf7f0cfd452304a7" kindref="member">Controls::part_imbalance</ref>] = 3</computeroutput>).</para></listitem><listitem><para><computeroutput>obj.dcntl[<ref refid="namespace_controls_1a95ac7709aefbd2460905cedd1e57b9d1a51375bf2322e85175b3e867e104941ec" kindref="member">Controls::threshold</ref>]</computeroutput> or <computeroutput>abcd::dcntl[2]</computeroutput> defines the stopping threshold for the block-CG acceleration, default is <computeroutput>1e-12</computeroutput>.</para></listitem></itemizedlist>
</para></sect2>
</sect1>
<sect1 id="md_old_doxygen_solver_c_1section_introduction">
<title>A usage example</title>
<para>Combining the previous options, we expose a basic example that uses the regular block Cimmino scheme, we comment the interesting parts and explain how they fit together. Refer to [Calling a job], [The linear system], and [The <ref refid="namespace_controls" kindref="compound">Controls</ref>] for more details.</para><para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&quot;abcd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>boost::mpi<sp/>for<sp/>simplicity,<sp/>the<sp/>user<sp/>can<sp/>use<sp/>which<sp/>ever<sp/>he<sp/>wants</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mpi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpi.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])<sp/></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mpi::environment<sp/>env(argc,<sp/>argv);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>obtain<sp/>the<sp/>WORLD<sp/>communicator,<sp/>by<sp/>default<sp/>the<sp/>solver<sp/>uses<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mpi::communicator<sp/>world;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>one<sp/>instance<sp/>of<sp/>the<sp/>abcd<sp/>solver<sp/>per<sp/>mpi-process</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classabcd" kindref="compound">abcd</ref><sp/>obj;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(world.rank()<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>master</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>create<sp/>a<sp/>5x5<sp/>matrix<sp/>for<sp/>a<sp/>1D<sp/>mesh<sp/>+<sp/>three-point<sp/>stencil<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a21d084898cb002a8814a7be3cf849da8" kindref="member">sym</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>matrix<sp/>is<sp/>symmetric</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a91ae5db6180d752acf83de9d07dc0d58" kindref="member">m</ref><sp/>=<sp/>10;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a430f5548e5969cc1f703563b92733b09" kindref="member">n</ref><sp/>=<sp/>obj.<ref refid="classabcd_1a91ae5db6180d752acf83de9d07dc0d58" kindref="member">m</ref>;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a0e652023493e13d320dd80a6b58c92ef" kindref="member">nz</ref><sp/>=<sp/>2*obj.<ref refid="classabcd_1a91ae5db6180d752acf83de9d07dc0d58" kindref="member">m</ref><sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>nnz<sp/>in<sp/>the<sp/>lower-triangular<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a8f6403dd5d221f50c4484221b1ffae4a" kindref="member">irn</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[obj.<ref refid="classabcd_1a0e652023493e13d320dd80a6b58c92ef" kindref="member">nz</ref>];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a56ab8a26759da48beacb9914edc97c39" kindref="member">jcn</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[obj.<ref refid="classabcd_1a0e652023493e13d320dd80a6b58c92ef" kindref="member">nz</ref>];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a47f742608fbdf5f394a68097500dc7dd" kindref="member">val</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[obj.<ref refid="classabcd_1a0e652023493e13d320dd80a6b58c92ef" kindref="member">nz</ref>];</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notice<sp/>that<sp/>the<sp/>matrix<sp/>is<sp/>stored<sp/>in<sp/>1-based<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>obj.<ref refid="classabcd_1a91ae5db6180d752acf83de9d07dc0d58" kindref="member">m</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>diagonal</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a8f6403dd5d221f50c4484221b1ffae4a" kindref="member">irn</ref>[pos]<sp/>=<sp/>i;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a56ab8a26759da48beacb9914edc97c39" kindref="member">jcn</ref>[pos]<sp/>=<sp/>i;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a47f742608fbdf5f394a68097500dc7dd" kindref="member">val</ref>[pos]<sp/>=<sp/>2.0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos++;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>lower-triangular<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a8f6403dd5d221f50c4484221b1ffae4a" kindref="member">irn</ref>[pos]<sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a56ab8a26759da48beacb9914edc97c39" kindref="member">jcn</ref>[pos]<sp/>=<sp/>i;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a47f742608fbdf5f394a68097500dc7dd" kindref="member">val</ref>[pos]<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>last<sp/>diagonal<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a8f6403dd5d221f50c4484221b1ffae4a" kindref="member">irn</ref>[pos]<sp/>=<sp/>obj.<ref refid="classabcd_1a91ae5db6180d752acf83de9d07dc0d58" kindref="member">m</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a56ab8a26759da48beacb9914edc97c39" kindref="member">jcn</ref>[pos]<sp/>=<sp/>obj.<ref refid="classabcd_1a91ae5db6180d752acf83de9d07dc0d58" kindref="member">m</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a47f742608fbdf5f394a68097500dc7dd" kindref="member">val</ref>[pos]<sp/>=<sp/>2.0;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos++;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>rhs</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a6d0201d9f397728a0cb9f0504570e958" kindref="member">rhs</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[obj.<ref refid="classabcd_1a91ae5db6180d752acf83de9d07dc0d58" kindref="member">m</ref>];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>obj.<ref refid="classabcd_1a91ae5db6180d752acf83de9d07dc0d58" kindref="member">m</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a6d0201d9f397728a0cb9f0504570e958" kindref="member">rhs</ref>[i]<sp/>=<sp/>((double)<sp/>i<sp/>+<sp/>1)/obj.<ref refid="classabcd_1a91ae5db6180d752acf83de9d07dc0d58" kindref="member">m</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ask<sp/>the<sp/>solver<sp/>to<sp/>guess<sp/>the<sp/>number<sp/>of<sp/>partitions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.<ref refid="classabcd_1a4e25bee21981dc6f6541126221d6c197" kindref="member">icntl</ref>[<ref refid="namespace_controls_1a41634ad81c9287acd66e5a0ebb45dd6ea2bfbb64d38dc2104fd14e46ce269c5f3" kindref="member">Controls::part_guess</ref>]<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>call<sp/>the<sp/>solver<sp/>directly<sp/>using<sp/>the<sp/>object<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(the<sp/>abcd<sp/>class<sp/>is<sp/>a<sp/>functor)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj(-1);<sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>object<sp/>with<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj(6);<sp/></highlight><highlight class="comment">//<sp/>equivalent<sp/>to<sp/>running<sp/>1,<sp/>2<sp/>and<sp/>3<sp/>successively</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>solution<sp/>is<sp/>stored<sp/>in<sp/>obj.sol</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(runtime_error<sp/>err)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>there<sp/>is<sp/>a<sp/>critical<sp/>error,<sp/>we<sp/>throw<sp/>a<sp/>runtime_error<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occured:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>err.what()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(world.rank()<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>master</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>obj.<ref refid="classabcd_1a8f6403dd5d221f50c4484221b1ffae4a" kindref="member">irn</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>obj.<ref refid="classabcd_1a56ab8a26759da48beacb9914edc97c39" kindref="member">jcn</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>obj.<ref refid="classabcd_1a47f742608fbdf5f394a68097500dc7dd" kindref="member">val</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
