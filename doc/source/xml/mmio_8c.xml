<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="mmio_8c" kind="file">
    <compoundname>mmio.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">ctype.h</includes>
    <includes refid="mmio_8h" local="yes">mmio.h</includes>
    <incdepgraph>
      <node id="438">
        <label>mmio.h</label>
        <link refid="mmio_8h"/>
      </node>
      <node id="436">
        <label>stdlib.h</label>
      </node>
      <node id="433">
        <label>/home/mzenadi/projects/abcd/src/mmio.c</label>
        <link refid="mmio.c"/>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
      </node>
      <node id="435">
        <label>string.h</label>
      </node>
      <node id="437">
        <label>ctype.h</label>
      </node>
      <node id="434">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="mmio_8c_1a7c7820e0d0a68f95befe5f43eb833da9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_read_unsymmetric_sparse</definition>
        <argsstring>(const char *fname, int *M_, int *N_, int *nz_, double **val_, int **I_, int **J_)</argsstring>
        <name>mm_read_unsymmetric_sparse</name>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>M_</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>N_</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nz_</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>val_</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>I_</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>J_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="17" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="17" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1aa1015f3b0282e7ef7ef3448fca37958d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_is_valid</definition>
        <argsstring>(MM_typecode matcode)</argsstring>
        <name>mm_is_valid</name>
        <param>
          <type><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref></type>
          <declname>matcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="86" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="86" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1ad8204d233b87eeba15de78abae85c814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_read_banner</definition>
        <argsstring>(FILE *f, MM_typecode *matcode)</argsstring>
        <name>mm_read_banner</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref> *</type>
          <declname>matcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="96" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="96" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1ad6f7429821e10fc084d1d7da481029f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_write_mtx_crd_size</definition>
        <argsstring>(FILE *f, int M, int N, int nz)</argsstring>
        <name>mm_write_mtx_crd_size</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="174" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1acf80791ad47f3c907c9145f7573eb33c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_read_mtx_crd_size</definition>
        <argsstring>(FILE *f, int *M, int *N, int *nz)</argsstring>
        <name>mm_read_mtx_crd_size</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="182" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="182" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1a77d0cc326838831814294614d1010ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_read_mtx_array_size</definition>
        <argsstring>(FILE *f, int *M, int *N)</argsstring>
        <name>mm_read_mtx_array_size</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="213" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="213" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1a4d0fe7a313521b054e1eaa7b38c6e514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_write_mtx_array_size</definition>
        <argsstring>(FILE *f, int M, int N)</argsstring>
        <name>mm_write_mtx_array_size</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="242" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="242" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1a865459b4a6c07939c06e3fe9365fc2a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_read_mtx_crd_data</definition>
        <argsstring>(FILE *f, int M, int N, int nz, int I[], int J[], double val[], MM_typecode matcode)</argsstring>
        <name>mm_read_mtx_crd_data</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>I</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>J</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref></type>
          <declname>matcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="258" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="258" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1a9b35386bc4a8284ece9185e6a314e6fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_read_mtx_crd_entry</definition>
        <argsstring>(FILE *f, int *I, int *J, double *real, double *imag, MM_typecode matcode)</argsstring>
        <name>mm_read_mtx_crd_entry</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>J</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>real</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>imag</declname>
        </param>
        <param>
          <type><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref></type>
          <declname>matcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="291" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="291" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1a20f55cb677aa71256a6c27311d164ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_read_mtx_crd</definition>
        <argsstring>(char *fname, int *M, int *N, int *nz, int **I, int **J, double **val, MM_typecode *matcode)</argsstring>
        <name>mm_read_mtx_crd</name>
        <param>
          <type>char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nz</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>J</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref> *</type>
          <declname>matcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="326" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="326" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1a1ae61f76394b37d9c41a0a1b63e5a3a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_write_banner</definition>
        <argsstring>(FILE *f, MM_typecode matcode)</argsstring>
        <name>mm_write_banner</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref></type>
          <declname>matcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="378" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="378" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1a68d9871d7292ea09a915e05a3588ad4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mm_write_mtx_crd</definition>
        <argsstring>(char fname[], int M, int N, int nz, int I[], int J[], double val[], MM_typecode matcode)</argsstring>
        <name>mm_write_mtx_crd</name>
        <param>
          <type>char</type>
          <declname>fname</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>I</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>J</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref></type>
          <declname>matcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="391" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="391" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1ac37b950ca2d922353bb1d33dcb9762e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* mm_strdup</definition>
        <argsstring>(const char *s)</argsstring>
        <name>mm_strdup</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Create a new copy of a string s. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="mmio_8c_1ac37b950ca2d922353bb1d33dcb9762e4" kindref="member">mm_strdup()</ref> is a common routine, but not part of ANSI C, so it is included here. Used by <ref refid="mmio_8c_1ae59430e91ee3c56cbe666976066f0a56" kindref="member">mm_typecode_to_str()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="437" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="437" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="mmio_8c_1ae59430e91ee3c56cbe666976066f0a56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* mm_typecode_to_str</definition>
        <argsstring>(MM_typecode matcode)</argsstring>
        <name>mm_typecode_to_str</name>
        <param>
          <type><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref></type>
          <declname>matcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mzenadi/projects/abcd/src/mmio.c" line="444" column="1" bodyfile="/home/mzenadi/projects/abcd/src/mmio.c" bodystart="444" bodyend="493"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/><sp/><sp/>Matrix<sp/>Market<sp/>I/O<sp/>library<sp/>for<sp/>ANSI<sp/>C</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/><sp/><sp/>See<sp/>http://math.nist.gov/MatrixMarket<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mmio_8h" kindref="compound">mmio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1a7c7820e0d0a68f95befe5f43eb833da9" kindref="member">mm_read_unsymmetric_sparse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*M_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*N_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*nz_,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**val_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**I_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**J_)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*f;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref><sp/>matcode;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M,<sp/>N,<sp/><ref refid="structabcd__solver_1a1f0ad7c33066effdd1709477dcd3cbd2" kindref="member">nz</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="structabcd__solver_1a36a0815ee4d5b60dd807ac579b978b03" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*I,<sp/>*J;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((f<sp/>=<sp/>fopen(fname,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8c_1ad8204d233b87eeba15de78abae85c814" kindref="member">mm_read_banner</ref>(f,<sp/>&amp;matcode)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;mm_read_unsymetric:<sp/>Could<sp/>not<sp/>process<sp/>Matrix<sp/>Market<sp/>banner<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>file<sp/>[%s]\n&quot;</highlight><highlight class="normal">,<sp/>fname);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(<ref refid="mmio_8h_1a6afdb9ff27a7a940a7e6538c961d2b72" kindref="member">mm_is_real</ref>(matcode)<sp/>&amp;&amp;<sp/><ref refid="mmio_8h_1a39b0b604a9348b9f662a0587a0c29911" kindref="member">mm_is_matrix</ref>(matcode)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1aee7772c709001e294bd67e6fd8382dc3" kindref="member">mm_is_sparse</ref>(matcode)))</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Sorry,<sp/>this<sp/>application<sp/>does<sp/>not<sp/>support<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Market<sp/>Market<sp/>type:<sp/>[%s]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8c_1ae59430e91ee3c56cbe666976066f0a56" kindref="member">mm_typecode_to_str</ref>(matcode));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>out<sp/>size<sp/>of<sp/>sparse<sp/>matrix:<sp/>M,<sp/>N,<sp/>nz<sp/>....<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8c_1acf80791ad47f3c907c9145f7573eb33c" kindref="member">mm_read_mtx_crd_size</ref>(f,<sp/>&amp;M,<sp/>&amp;N,<sp/>&amp;nz)<sp/>!=0)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;read_unsymmetric_sparse():<sp/>could<sp/>not<sp/>parse<sp/>matrix<sp/>size.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>*M_<sp/>=<sp/>M;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>*N_<sp/>=<sp/>N;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>*nz_<sp/>=<sp/><ref refid="structabcd__solver_1a1f0ad7c33066effdd1709477dcd3cbd2" kindref="member">nz</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reseve<sp/>memory<sp/>for<sp/>matrices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>I<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>malloc(nz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>J<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>malloc(nz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)<sp/>malloc(nz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>*val_<sp/>=<sp/><ref refid="structabcd__solver_1a36a0815ee4d5b60dd807ac579b978b03" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>*I_<sp/>=<sp/>I;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>*J_<sp/>=<sp/>J;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>when<sp/>reading<sp/>in<sp/>doubles,<sp/>ANSI<sp/>C<sp/>requires<sp/>the<sp/>use<sp/>of<sp/>the<sp/>&quot;l&quot;<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>specifier<sp/>as<sp/>in<sp/>&quot;%lg&quot;,<sp/>&quot;%lf&quot;,<sp/>&quot;%le&quot;,<sp/>otherwise<sp/>errors<sp/>will<sp/>occur<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>(ANSI<sp/>C<sp/>X3.159-1989,<sp/>Sec.<sp/>4.9.6.2,<sp/>p.<sp/>136<sp/>lines<sp/>13-15)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="structabcd__solver_1a1f0ad7c33066effdd1709477dcd3cbd2" kindref="member">nz</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fscanf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%lg\n&quot;</highlight><highlight class="normal">,<sp/>&amp;I[i],<sp/>&amp;J[i],<sp/>&amp;val[i]);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I[i]--;<sp/><sp/></highlight><highlight class="comment">/*<sp/>adjust<sp/>from<sp/>1-based<sp/>to<sp/>0-based<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>J[i]--;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1aa1015f3b0282e7ef7ef3448fca37958d" kindref="member">mm_is_valid</ref>(<ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref><sp/>matcode)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="mmio_8h_1a39b0b604a9348b9f662a0587a0c29911" kindref="member">mm_is_matrix</ref>(matcode))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a0839683fb6e8a9ce931aec600871f8f8" kindref="member">mm_is_dense</ref>(matcode)<sp/>&amp;&amp;<sp/><ref refid="mmio_8h_1aa105a83b200825c5c9c8e5d44b905187" kindref="member">mm_is_pattern</ref>(matcode))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a6afdb9ff27a7a940a7e6538c961d2b72" kindref="member">mm_is_real</ref>(matcode)<sp/>&amp;&amp;<sp/><ref refid="mmio_8h_1a409f46e8143876e3b6681728318d866f" kindref="member">mm_is_hermitian</ref>(matcode))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1aa105a83b200825c5c9c8e5d44b905187" kindref="member">mm_is_pattern</ref>(matcode)<sp/>&amp;&amp;<sp/>(<ref refid="mmio_8h_1a409f46e8143876e3b6681728318d866f" kindref="member">mm_is_hermitian</ref>(matcode)<sp/>||</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1a714cfbd11fe0bcdd72ec7eac5ef27a73" kindref="member">mm_is_skew</ref>(matcode)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1ad8204d233b87eeba15de78abae85c814" kindref="member">mm_read_banner</ref>(FILE<sp/>*f,<sp/><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref><sp/>*matcode)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[<ref refid="mmio_8h_1a338442ee1967d47ab7f2e4c3cccf75dd" kindref="member">MM_MAX_LINE_LENGTH</ref>];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>banner[<ref refid="mmio_8h_1a532f9540afd8f387f6f846714ecd4d36" kindref="member">MM_MAX_TOKEN_LENGTH</ref>];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mtx[<ref refid="mmio_8h_1a532f9540afd8f387f6f846714ecd4d36" kindref="member">MM_MAX_TOKEN_LENGTH</ref>];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>crd[<ref refid="mmio_8h_1a532f9540afd8f387f6f846714ecd4d36" kindref="member">MM_MAX_TOKEN_LENGTH</ref>];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data_type[<ref refid="mmio_8h_1a532f9540afd8f387f6f846714ecd4d36" kindref="member">MM_MAX_TOKEN_LENGTH</ref>];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>storage_scheme[<ref refid="mmio_8h_1a532f9540afd8f387f6f846714ecd4d36" kindref="member">MM_MAX_TOKEN_LENGTH</ref>];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1a4d63d071fcfb7c11c77ced59b38b2b38" kindref="member">mm_clear_typecode</ref>(matcode);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgets(line,<sp/><ref refid="mmio_8h_1a338442ee1967d47ab7f2e4c3cccf75dd" kindref="member">MM_MAX_LINE_LENGTH</ref>,<sp/>f)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" kindref="member">MM_PREMATURE_EOF</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(line,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%s<sp/>%s<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>banner,<sp/>mtx,<sp/>crd,<sp/>data_type,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_scheme)<sp/>!=<sp/>5)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" kindref="member">MM_PREMATURE_EOF</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p=mtx;<sp/>*p!=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>*p=tolower(*p),p++);<sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>to<sp/>lower<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p=crd;<sp/>*p!=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>*p=tolower(*p),p++);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p=data_type;<sp/>*p!=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>*p=tolower(*p),p++);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p=storage_scheme;<sp/>*p!=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>*p=tolower(*p),p++);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>banner<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(banner,<sp/><ref refid="mmio_8h_1af63c90afdcf0c7bb538ef8963b0385d9" kindref="member">MatrixMarketBanner</ref>,<sp/>strlen(<ref refid="mmio_8h_1af63c90afdcf0c7bb538ef8963b0385d9" kindref="member">MatrixMarketBanner</ref>))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a92a9e51b7e612248c29398422613c83d" kindref="member">MM_NO_HEADER</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>field<sp/>should<sp/>be<sp/>&quot;mtx&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(mtx,<sp/><ref refid="mmio_8h_1a103aac2f6e2ac7c7b063726f58dda8af" kindref="member">MM_MTX_STR</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="mmio_8h_1a7c4977adc296451d59e66972fd4e58db" kindref="member">MM_UNSUPPORTED_TYPE</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1ab94a2a33e79dda9a50645718c3055bde" kindref="member">mm_set_matrix</ref>(matcode);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>second<sp/>field<sp/>describes<sp/>whether<sp/>this<sp/>is<sp/>a<sp/>sparse<sp/>matrix<sp/>(in<sp/>coordinate</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storgae)<sp/>or<sp/>a<sp/>dense<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(crd,<sp/><ref refid="mmio_8h_1a720ba16714f07ad6ae39055683aa3cb3" kindref="member">MM_SPARSE_STR</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1a38129ce74fa250f778730f1344135c16" kindref="member">mm_set_sparse</ref>(matcode);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(crd,<sp/><ref refid="mmio_8h_1ad54c538e24b85cc0ce790e53c96b18f8" kindref="member">MM_DENSE_STR</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1abba2bdfdc6f133207b52e70b31f07534" kindref="member">mm_set_dense</ref>(matcode);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a7c4977adc296451d59e66972fd4e58db" kindref="member">MM_UNSUPPORTED_TYPE</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>third<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(data_type,<sp/><ref refid="mmio_8h_1adb63588b8225c991b215b37befd8909e" kindref="member">MM_REAL_STR</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1aef12252aecf7a4af6baa752dc9d29698" kindref="member">mm_set_real</ref>(matcode);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(data_type,<sp/><ref refid="mmio_8h_1a53e740b82aa1fcc72b48aac6304b38bf" kindref="member">MM_COMPLEX_STR</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1a1d2710c2c5c84322c5ebad36811c0636" kindref="member">mm_set_complex</ref>(matcode);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(data_type,<sp/><ref refid="mmio_8h_1a1f4d6203428af6f9711140288fe8061b" kindref="member">MM_PATTERN_STR</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1ac9bdbe4b4fb164f60460b56c815902c4" kindref="member">mm_set_pattern</ref>(matcode);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(data_type,<sp/><ref refid="mmio_8h_1ae7d131244c25d09dd27ffe7188572a3e" kindref="member">MM_INT_STR</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1a88726ec878ed03d713d9cf1519ac822d" kindref="member">mm_set_integer</ref>(matcode);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a7c4977adc296451d59e66972fd4e58db" kindref="member">MM_UNSUPPORTED_TYPE</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fourth<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(storage_scheme,<sp/><ref refid="mmio_8h_1a4f2a311f3cebaf460f028b00d4d1e6c6" kindref="member">MM_GENERAL_STR</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1a244392516ea33cb49f27d53d36c71d4a" kindref="member">mm_set_general</ref>(matcode);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(storage_scheme,<sp/><ref refid="mmio_8h_1ac004e8f7880b764acaa4b02a6ac80d43" kindref="member">MM_SYMM_STR</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1a5b5292978fc119acc10444b282fe994c" kindref="member">mm_set_symmetric</ref>(matcode);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(storage_scheme,<sp/><ref refid="mmio_8h_1a99c6e5fbe593f517fc63cbd25dd387a0" kindref="member">MM_HERM_STR</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1a1df99ff9edf59d44b3866633ee98dbdf" kindref="member">mm_set_hermitian</ref>(matcode);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(storage_scheme,<sp/><ref refid="mmio_8h_1a357908ad5dada2cd90176746e073cd0e" kindref="member">MM_SKEW_STR</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1a355520c4b7b525bd79972117368967b1" kindref="member">mm_set_skew</ref>(matcode);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a7c4977adc296451d59e66972fd4e58db" kindref="member">MM_UNSUPPORTED_TYPE</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1ad6f7429821e10fc084d1d7da481029f3" kindref="member">mm_write_mtx_crd_size</ref>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nz)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>M,<sp/>N,<sp/>nz)<sp/>!=<sp/>3)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a823b41c658a5cbedb8e724fb3b9fe79e" kindref="member">MM_COULD_NOT_WRITE_FILE</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1acf80791ad47f3c907c9145f7573eb33c" kindref="member">mm_read_mtx_crd_size</ref>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*nz<sp/>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[<ref refid="mmio_8h_1a338442ee1967d47ab7f2e4c3cccf75dd" kindref="member">MM_MAX_LINE_LENGTH</ref>];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_items_read;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>return<sp/>null<sp/>parameter<sp/>values,<sp/>in<sp/>case<sp/>we<sp/>exit<sp/>with<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>*M<sp/>=<sp/>*N<sp/>=<sp/>*nz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>continue<sp/>scanning<sp/>until<sp/>you<sp/>reach<sp/>the<sp/>end-of-comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgets(line,<ref refid="mmio_8h_1a338442ee1967d47ab7f2e4c3cccf75dd" kindref="member">MM_MAX_LINE_LENGTH</ref>,f)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" kindref="member">MM_PREMATURE_EOF</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>line[]<sp/>is<sp/>either<sp/>blank<sp/>or<sp/>has<sp/>M,N,<sp/>nz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(line,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>M,<sp/>N,<sp/>nz)<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_items_read<sp/>=<sp/>fscanf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>M,<sp/>N,<sp/>nz);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_items_read<sp/>==<sp/>EOF)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" kindref="member">MM_PREMATURE_EOF</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_items_read<sp/>!=<sp/>3);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1a77d0cc326838831814294614d1010ca5" kindref="member">mm_read_mtx_array_size</ref>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*N)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[<ref refid="mmio_8h_1a338442ee1967d47ab7f2e4c3cccf75dd" kindref="member">MM_MAX_LINE_LENGTH</ref>];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_items_read;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>return<sp/>null<sp/>parameter<sp/>values,<sp/>in<sp/>case<sp/>we<sp/>exit<sp/>with<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>*M<sp/>=<sp/>*N<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>continue<sp/>scanning<sp/>until<sp/>you<sp/>reach<sp/>the<sp/>end-of-comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgets(line,<ref refid="mmio_8h_1a338442ee1967d47ab7f2e4c3cccf75dd" kindref="member">MM_MAX_LINE_LENGTH</ref>,f)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" kindref="member">MM_PREMATURE_EOF</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>line[]<sp/>is<sp/>either<sp/>blank<sp/>or<sp/>has<sp/>M,N,<sp/>nz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(line,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>M,<sp/>N)<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>a<sp/>blank<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_items_read<sp/>=<sp/>fscanf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>M,<sp/>N);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_items_read<sp/>==<sp/>EOF)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" kindref="member">MM_PREMATURE_EOF</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_items_read<sp/>!=<sp/>2);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1a4d0fe7a313521b054e1eaa7b38c6e514" kindref="member">mm_write_mtx_array_size</ref>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>M,<sp/>N)<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a823b41c658a5cbedb8e724fb3b9fe79e" kindref="member">MM_COULD_NOT_WRITE_FILE</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>use<sp/>when<sp/>I[],<sp/>J[],<sp/>and<sp/>val[]J,<sp/>and<sp/>val[]<sp/>are<sp/>already<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1a865459b4a6c07939c06e3fe9365fc2a2" kindref="member">mm_read_mtx_crd_data</ref>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>J[],</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val[],<sp/><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref><sp/>matcode)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a099de03c35a8b30cf035c46b5349e48b" kindref="member">mm_is_complex</ref>(matcode))</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="structabcd__solver_1a1f0ad7c33066effdd1709477dcd3cbd2" kindref="member">nz</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%lg<sp/>%lg&quot;</highlight><highlight class="normal">,<sp/>&amp;I[i],<sp/>&amp;J[i],<sp/>&amp;val[2*i],<sp/>&amp;val[2*i+1])</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" kindref="member">MM_PREMATURE_EOF</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a6afdb9ff27a7a940a7e6538c961d2b72" kindref="member">mm_is_real</ref>(matcode))</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="structabcd__solver_1a1f0ad7c33066effdd1709477dcd3cbd2" kindref="member">nz</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%lg\n&quot;</highlight><highlight class="normal">,<sp/>&amp;I[i],<sp/>&amp;J[i],<sp/>&amp;val[i])</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" kindref="member">MM_PREMATURE_EOF</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1aa105a83b200825c5c9c8e5d44b905187" kindref="member">mm_is_pattern</ref>(matcode))</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="structabcd__solver_1a1f0ad7c33066effdd1709477dcd3cbd2" kindref="member">nz</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>&amp;I[i],<sp/>&amp;J[i])</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" kindref="member">MM_PREMATURE_EOF</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a7c4977adc296451d59e66972fd4e58db" kindref="member">MM_UNSUPPORTED_TYPE</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1a9b35386bc4a8284ece9185e6a314e6fb" kindref="member">mm_read_mtx_crd_entry</ref>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*I,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*J,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*real,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*imag,<sp/><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref><sp/>matcode)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a099de03c35a8b30cf035c46b5349e48b" kindref="member">mm_is_complex</ref>(matcode))</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%lg<sp/>%lg&quot;</highlight><highlight class="normal">,<sp/>I,<sp/>J,<sp/>real,<sp/>imag)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" kindref="member">MM_PREMATURE_EOF</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a6afdb9ff27a7a940a7e6538c961d2b72" kindref="member">mm_is_real</ref>(matcode))</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%lg\n&quot;</highlight><highlight class="normal">,<sp/>I,<sp/>J,<sp/>real)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" kindref="member">MM_PREMATURE_EOF</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1aa105a83b200825c5c9c8e5d44b905187" kindref="member">mm_is_pattern</ref>(matcode))</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>I,<sp/>J)<sp/>!=<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a35f109af00ebbbd4d008f8fcbc8ed9c1" kindref="member">MM_PREMATURE_EOF</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a7c4977adc296451d59e66972fd4e58db" kindref="member">MM_UNSUPPORTED_TYPE</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/>mm_read_mtx_crd()<sp/><sp/>fills<sp/>M,<sp/>N,<sp/>nz,<sp/>array<sp/>of<sp/>values,<sp/>and<sp/>return</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>code,<sp/>e.g.<sp/>&apos;MCRS&apos;</highlight></codeline>
<codeline lineno="321"><highlight class="comment"></highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>matrix<sp/>is<sp/>complex,<sp/>values[]<sp/>is<sp/>of<sp/>size<sp/>2*nz,</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nz<sp/>pairs<sp/>of<sp/>real/imaginary<sp/>values)</highlight></codeline>
<codeline lineno="324"><highlight class="comment">************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1a20f55cb677aa71256a6c27311d164ee7" kindref="member">mm_read_mtx_crd</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*nz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**I,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**J,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**val,<sp/><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref><sp/>*matcode)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret_code;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*f;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(fname,<sp/></highlight><highlight class="stringliteral">&quot;stdin&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>f=stdin;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((f<sp/>=<sp/>fopen(fname,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a1e36f866ae2805a8b1a6fb626863decc" kindref="member">MM_COULD_NOT_READ_FILE</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ret_code<sp/>=<sp/><ref refid="mmio_8c_1ad8204d233b87eeba15de78abae85c814" kindref="member">mm_read_banner</ref>(f,<sp/>matcode))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_code;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="mmio_8c_1aa1015f3b0282e7ef7ef3448fca37958d" kindref="member">mm_is_valid</ref>(*matcode)<sp/>&amp;&amp;<sp/><ref refid="mmio_8h_1aee7772c709001e294bd67e6fd8382dc3" kindref="member">mm_is_sparse</ref>(*matcode)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmio_8h_1a39b0b604a9348b9f662a0587a0c29911" kindref="member">mm_is_matrix</ref>(*matcode)))</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a7c4977adc296451d59e66972fd4e58db" kindref="member">MM_UNSUPPORTED_TYPE</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ret_code<sp/>=<sp/><ref refid="mmio_8c_1acf80791ad47f3c907c9145f7573eb33c" kindref="member">mm_read_mtx_crd_size</ref>(f,<sp/>M,<sp/>N,<sp/>nz))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_code;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>*I<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/><sp/>malloc(*nz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>*J<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/><sp/>malloc(*nz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a099de03c35a8b30cf035c46b5349e48b" kindref="member">mm_is_complex</ref>(*matcode))</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)<sp/>malloc(*nz<sp/>*<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_code<sp/>=<sp/><ref refid="mmio_8c_1a865459b4a6c07939c06e3fe9365fc2a2" kindref="member">mm_read_mtx_crd_data</ref>(f,<sp/>*M,<sp/>*N,<sp/>*nz,<sp/>*I,<sp/>*J,<sp/>*val,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*matcode);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret_code<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_code;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a6afdb9ff27a7a940a7e6538c961d2b72" kindref="member">mm_is_real</ref>(*matcode))</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)<sp/>malloc(*nz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_code<sp/>=<sp/><ref refid="mmio_8c_1a865459b4a6c07939c06e3fe9365fc2a2" kindref="member">mm_read_mtx_crd_data</ref>(f,<sp/>*M,<sp/>*N,<sp/>*nz,<sp/>*I,<sp/>*J,<sp/>*val,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*matcode);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret_code<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_code;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1aa105a83b200825c5c9c8e5d44b905187" kindref="member">mm_is_pattern</ref>(*matcode))</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_code<sp/>=<sp/><ref refid="mmio_8c_1a865459b4a6c07939c06e3fe9365fc2a2" kindref="member">mm_read_mtx_crd_data</ref>(f,<sp/>*M,<sp/>*N,<sp/>*nz,<sp/>*I,<sp/>*J,<sp/>*val,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*matcode);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret_code<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_code;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>!=<sp/>stdin)<sp/>fclose(f);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1a1ae61f76394b37d9c41a0a1b63e5a3a1" kindref="member">mm_write_banner</ref>(FILE<sp/>*f,<sp/><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref><sp/>matcode)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/><ref refid="mmio_8c_1ae59430e91ee3c56cbe666976066f0a56" kindref="member">mm_typecode_to_str</ref>(matcode);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret_code;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>ret_code<sp/>=<sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="mmio_8h_1af63c90afdcf0c7bb538ef8963b0385d9" kindref="member">MatrixMarketBanner</ref>,<sp/>str);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret_code<sp/>!=2<sp/>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a823b41c658a5cbedb8e724fb3b9fe79e" kindref="member">MM_COULD_NOT_WRITE_FILE</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1a68d9871d7292ea09a915e05a3588ad4c" kindref="member">mm_write_mtx_crd</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fname[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>J[],</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val[],<sp/><ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref><sp/>matcode)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*f;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(fname,<sp/></highlight><highlight class="stringliteral">&quot;stdout&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>stdout;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((f<sp/>=<sp/>fopen(fname,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a823b41c658a5cbedb8e724fb3b9fe79e" kindref="member">MM_COULD_NOT_WRITE_FILE</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>banner<sp/>followed<sp/>by<sp/>typecode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="mmio_8h_1af63c90afdcf0c7bb538ef8963b0385d9" kindref="member">MatrixMarketBanner</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="mmio_8c_1ae59430e91ee3c56cbe666976066f0a56" kindref="member">mm_typecode_to_str</ref>(matcode));</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>matrix<sp/>sizes<sp/>and<sp/>nonzeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>M,<sp/>N,<sp/>nz);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1aa105a83b200825c5c9c8e5d44b905187" kindref="member">mm_is_pattern</ref>(matcode))</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="structabcd__solver_1a1f0ad7c33066effdd1709477dcd3cbd2" kindref="member">nz</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>I[i],<sp/>J[i]);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a6afdb9ff27a7a940a7e6538c961d2b72" kindref="member">mm_is_real</ref>(matcode))</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="structabcd__solver_1a1f0ad7c33066effdd1709477dcd3cbd2" kindref="member">nz</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%20.16g\n&quot;</highlight><highlight class="normal">,<sp/>I[i],<sp/>J[i],<sp/>val[i]);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a099de03c35a8b30cf035c46b5349e48b" kindref="member">mm_is_complex</ref>(matcode))</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="structabcd__solver_1a1f0ad7c33066effdd1709477dcd3cbd2" kindref="member">nz</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%20.16g<sp/>%20.16g\n&quot;</highlight><highlight class="normal">,<sp/>I[i],<sp/>J[i],<sp/>val[2*i],</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[2*i+1]);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>!=<sp/>stdout)<sp/>fclose(f);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8h_1a7c4977adc296451d59e66972fd4e58db" kindref="member">MM_UNSUPPORTED_TYPE</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>!=stdout)<sp/>fclose(f);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="mmio_8c_1ac37b950ca2d922353bb1d33dcb9762e4" kindref="member">mm_strdup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(s);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>malloc((len+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcpy(s2,<sp/>s);</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*<ref refid="mmio_8c_1ae59430e91ee3c56cbe666976066f0a56" kindref="member">mm_typecode_to_str</ref>(<ref refid="mmio_8h_1a27c4a0610b9f2ecb5edb6430e79ae9ee" kindref="member">MM_typecode</ref><sp/>matcode)</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[<ref refid="mmio_8h_1a338442ee1967d47ab7f2e4c3cccf75dd" kindref="member">MM_MAX_LINE_LENGTH</ref>];</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*types[4];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="mmio_8c_1ac37b950ca2d922353bb1d33dcb9762e4" kindref="member">mm_strdup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error<sp/>=0;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>MTX<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a39b0b604a9348b9f662a0587a0c29911" kindref="member">mm_is_matrix</ref>(matcode))</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[0]<sp/>=<sp/><ref refid="mmio_8h_1a103aac2f6e2ac7c7b063726f58dda8af" kindref="member">MM_MTX_STR</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error=1;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>CRD<sp/>or<sp/>ARR<sp/>matrix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1aee7772c709001e294bd67e6fd8382dc3" kindref="member">mm_is_sparse</ref>(matcode))</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[1]<sp/>=<sp/><ref refid="mmio_8h_1a720ba16714f07ad6ae39055683aa3cb3" kindref="member">MM_SPARSE_STR</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a0839683fb6e8a9ce931aec600871f8f8" kindref="member">mm_is_dense</ref>(matcode))</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[1]<sp/>=<sp/><ref refid="mmio_8h_1ad54c538e24b85cc0ce790e53c96b18f8" kindref="member">MM_DENSE_STR</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>element<sp/>data<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a6afdb9ff27a7a940a7e6538c961d2b72" kindref="member">mm_is_real</ref>(matcode))</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[2]<sp/>=<sp/><ref refid="mmio_8h_1adb63588b8225c991b215b37befd8909e" kindref="member">MM_REAL_STR</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a099de03c35a8b30cf035c46b5349e48b" kindref="member">mm_is_complex</ref>(matcode))</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[2]<sp/>=<sp/><ref refid="mmio_8h_1a53e740b82aa1fcc72b48aac6304b38bf" kindref="member">MM_COMPLEX_STR</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1aa105a83b200825c5c9c8e5d44b905187" kindref="member">mm_is_pattern</ref>(matcode))</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[2]<sp/>=<sp/><ref refid="mmio_8h_1a1f4d6203428af6f9711140288fe8061b" kindref="member">MM_PATTERN_STR</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1ad405f8a31e4f487e04269e372def0071" kindref="member">mm_is_integer</ref>(matcode))</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[2]<sp/>=<sp/><ref refid="mmio_8h_1ae7d131244c25d09dd27ffe7188572a3e" kindref="member">MM_INT_STR</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>symmetry<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1aadc12b70af792b1b5c820267396342ce" kindref="member">mm_is_general</ref>(matcode))</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[3]<sp/>=<sp/><ref refid="mmio_8h_1a4f2a311f3cebaf460f028b00d4d1e6c6" kindref="member">MM_GENERAL_STR</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1ae3eab2d2f506a37bc1cda68b21bce9c4" kindref="member">mm_is_symmetric</ref>(matcode))</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[3]<sp/>=<sp/><ref refid="mmio_8h_1ac004e8f7880b764acaa4b02a6ac80d43" kindref="member">MM_SYMM_STR</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a409f46e8143876e3b6681728318d866f" kindref="member">mm_is_hermitian</ref>(matcode))</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[3]<sp/>=<sp/><ref refid="mmio_8h_1a99c6e5fbe593f517fc63cbd25dd387a0" kindref="member">MM_HERM_STR</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mmio_8h_1a714cfbd11fe0bcdd72ec7eac5ef27a73" kindref="member">mm_is_skew</ref>(matcode))</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[3]<sp/>=<sp/><ref refid="mmio_8h_1a357908ad5dada2cd90176746e073cd0e" kindref="member">MM_SKEW_STR</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buffer,</highlight><highlight class="stringliteral">&quot;%s<sp/>%s<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>types[0],<sp/>types[1],<sp/>types[2],<sp/>types[3]);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mmio_8c_1ac37b950ca2d922353bb1d33dcb9762e4" kindref="member">mm_strdup</ref>(buffer);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mzenadi/projects/abcd/src/mmio.c"/>
  </compounddef>
</doxygen>
